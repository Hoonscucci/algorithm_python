피보나치 수
문제 설명
피보나치 수는 F(0) = 0, F(1) = 1일 때, 1 이상의 n에 대하여 F(n) = F(n-1) + F(n-2) 가 적용되는 수 입니다.

예를들어

F(2) = F(0) + F(1) = 0 + 1 = 1
F(3) = F(1) + F(2) = 1 + 1 = 2
F(4) = F(2) + F(3) = 1 + 2 = 3
F(5) = F(3) + F(4) = 2 + 3 = 5
와 같이 이어집니다.

2 이상의 n이 입력되었을 때, n번째 피보나치 수를 1234567으로 나눈 나머지를 리턴하는 함수, solution을 완성해 주세요.

제한 사항
n은 2 이상 100,000 이하인 자연수입니다.
입출력 예
n	return
3	2
5	5

=======================================

# f(0) = 0, f(1) = 1
# f(n) = f(n-1)+f(n-2)
# 그럼 f(n) 값 들이 다 저장되어 있어야 함? 
# 재귀함수?
# n == 2 return 1
#  a= 0, b=1
# for i in range(2,n):
#  a, b = b, b+a - 값 계속 변화

def solution(n):
    answer = 0
    a = 0
    b = 1
    if n == 2:          # 
        return 1
    else:
        for i in range(1,n):
            a, b = b,b+a
        answer += b
    return answer

"""
코드는 실행됐으나 체점에서 43점 정도를 기록했다.
런타임 에러가 발생했다. 
재귀 함수로 풀어볼까 했는데
재귀로 풀어도 되는데 패턴을 찾으라는 말에 이렇게 작성해봤다.
"""

========================================

def solution(n):
    a,b =0,1
    for i in range(n):
        a, b = b,a+b
    
    return a%1234567

"""
1234567로 나눈 나머지가 답으로 제출되어야 했기에 % 1234567이 추가되지 않아서
코드가 작동 되지 않았다...ㅜㅜ
"""

def solution(n):
    pibo = [0,1]
    for i in range(2,n+1):
        pibo.append(pibo[i-1]+pibo[i-2])
        
    return pibo[-1]%1234567

"""
좀 더 보기 쉬운 코드로 작성했다.
0과 1일때는 0,1로 지정해놓고 반복문을 통해서 수들을 더해주고
추가된수 중 가장 마지막 숫자를 1234567로 나눈 나머지값을 반환한다.
"""

==========================

def solution(n):
    if n < 2:
        return n
    else:
        return (solution(n - 1)+solution(n - 2)) % 1234567
    
"""
처음 문제를 봤을땐 재귀함수로 푸는 문제인줄 알았다.
그래서 정답을 찾고 나서도 재귀함수로 풀어보고 싶었는데
정확히 어떻게 작동이 되는지 모르겠다.
스터디시간에 제대로 확인하고 재귀 함수에 대해 좀 더 공부를 해야겠다."""